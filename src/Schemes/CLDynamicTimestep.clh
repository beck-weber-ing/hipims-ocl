/*
 * ------------------------------------------
 *
 *  HIGH-PERFORMANCE INTEGRATED MODELLING SYSTEM (HiPIMS)
 *  Luke S. Smith and Qiuhua Liang
 *  luke@smith.ac
 *
 *  School of Civil Engineering & Geosciences
 *  Newcastle University
 *
 * ------------------------------------------
 *  This code is licensed under GPLv3. See LICENCE
 *  for more information.
 * ------------------------------------------
 *  Header file
 *  CFL DYNAMIC TIMESTEP
 * ------------------------------------------
 *  Calculate the timestep using a reduction
 *  procedure and increment the total model
 *  time.
 * ------------------------------------------
 *
 */
#define TIMESTEP_EARLY_LIMIT			1.0
#define TIMESTEP_EARLY_LIMIT_DURATION	60.0
#define TIMESTEP_START_MINIMUM			1E-10
#define TIMESTEP_START_MINIMUM_DURATION	1.0
#define TIMESTEP_MINIMUM				1E-10
#define TIMESTEP_MAXIMUM				15.0

#ifdef USE_FUNCTION_STUBS
// Function definitions
__kernel  __attribute__((reqd_work_group_size(1, 1, 1)))
void tst_Advance_Normal (
	__global	cl_double *,
	__global	cl_double *,
	__global	cl_double *,
	__global	cl_double *,
	__global	cl_double4 *,
	__global	cl_double *,
	__global	cl_double *,
	__global	cl_double *,
	__global	cl_uint *,
	__global	cl_uint *
);

__kernel  __attribute__((reqd_work_group_size(1, 1, 1)))
void tst_ResetCounters(
	__global	cl_double *,
	__global	cl_uint *,
	__global	cl_uint *
);

__kernel  __attribute__((reqd_work_group_size(1, 1, 1)))
void tst_UpdateTimestep (
	__global	cl_double *,
	__global	cl_double *,
	__global	cl_double *,
	__global	cl_double *,
	__global	cl_double *
);

__kernel  REQD_WG_SIZE_LINE
void tst_Reduce (
	__global	cl_double4 *,
	__global	cl_double const * restrict,
	__global	cl_double *
);

#endif
